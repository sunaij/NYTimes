apply plugin: 'com.android.application'
apply plugin: "org.sonarqube"
apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.1"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}



android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.nytimes.articles"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
                testCoverageEnabled true
            }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }

    sonarqube {
        properties {
            property "sonar.sources", "src/main"
            property "sonar.projectName", "NYTimesApp" // Name of your project
            property "sonar.projectVersion", "1.0.2" // Version of your project
            property "sonar.projectDescription", "NYTimes Application to list popular Articles"
        }
    }
}

dependencies {
    final SUPPORT_LIBRARY_VERSION = '28.0.0-alpha3'
    final ARCHITECTURE_COMPONENT_VERSION = '1.1.1'
    final RETROFIT_VERSION = '2.3.0'
    final DAGGER_VERSION = '2.15'
    final LOTTIE_ANDROID_VERSION = '2.5.4'
    final ROOM_VERSION = '1.1.1'

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Android Support Library dependecies
    implementation "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation "com.android.support:design:$SUPPORT_LIBRARY_VERSION"

    // Unit test dependencies
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.6.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'


    // RxJava / RxAndroid
    implementation 'io.reactivex.rxjava2:rxjava:2.1.10'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    // Dagger 2
    implementation "com.google.dagger:dagger:$DAGGER_VERSION"
    implementation "com.google.dagger:dagger-android-support:$DAGGER_VERSION"
    annotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    annotationProcessor "com.google.dagger:dagger-android-processor:$DAGGER_VERSION"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_VERSION"

    // Android Architecture Components
    implementation "android.arch.lifecycle:extensions:$ARCHITECTURE_COMPONENT_VERSION"
    implementation "android.arch.lifecycle:common-java8:$ARCHITECTURE_COMPONENT_VERSION"
    implementation "android.arch.lifecycle:reactivestreams:$ARCHITECTURE_COMPONENT_VERSION"

    //Lottie Animation view
    implementation "com.airbnb.android:lottie:$LOTTIE_ANDROID_VERSION"

    //Calligraphy for custom fonts
    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'


    // Room SQLite for data persistence
    implementation "android.arch.persistence.room:runtime:$ROOM_VERSION"
    annotationProcessor "android.arch.persistence.room:compiler:$ROOM_VERSION"

    // Chrome custom tab
    implementation 'com.android.support:customtabs:28.0.0-alpha3'

    // optional - RxJava support for Room
    implementation "android.arch.persistence.room:rxjava2:$ROOM_VERSION"

    implementation "com.squareup.okhttp3:mockwebserver:3.8.1"

    androidTestImplementation 'com.android.support:support-annotations:27.1.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    testImplementation 'org.mockito:mockito-core:2.7.6'

    implementation 'org.jsoup:jsoup:1.10.2'

}
